parameters:
  - name: environment
    type: string
  - name: tfvarspath
    type: string
  - name: runApply
    type: boolean
    default: false

jobs: 
  - job: PreDeploy_${{parameters.environment}}
    displayName: "${{ parameters.environment }} - Terraform Plan and Validate"
    pool: digwi-pool
    steps:
      - task: AzureCLI@2
        displayName: Terraform Init
        inputs:
          azureSubscription: 'WIF-ServiceConnection'
          scriptType: 'ps' 
          scriptLocation: 'inlineScript'
          workingDirectory: '$(System.DefaultWorkingDirectory)/todo-infra'
          inlineScript: |
            terraform init `
              -backend-config="storage_account_name=digwitfstatestorage" `
              -backend-config="container_name=tfstate" `
              -backend-config="key=${{ parameters.environment }}.tfstate" `
              -backend-config="resource_group_name=rg-tfstate" `
              -backend-config="subscription_id=ab1ac19d-06cd-4ac2-b289-cbb67e904a92" `
              -backend-config="use_azuread_auth=true"

      - task: TerraformTask@5
        inputs:
          provider: 'azurerm'
          command: 'validate'
          workingDirectory: '$(System.DefaultWorkingDirectory)/todo-infra'

      - task: AzureCLI@2
        displayName: Terraform Plan
        inputs:
          azureSubscription: 'WIF-ServiceConnection'
          scriptType: 'ps'
          scriptLocation: 'inlineScript'
          workingDirectory: '$(System.DefaultWorkingDirectory)/todo-infra'
          inlineScript: |
            terraform plan -var-file="${{ parameters.tfvarspath }}"

  - job: ManualApproval${{parameters.environment}}
    displayName: "${{ parameters.environment }} - Manual Approval"
    dependsOn: PreDeploy_${{parameters.environment}}
    pool: server
    condition: succeeded()
    timeoutInMinutes: 4320 # job times out in 3 days
    steps:
    - task: ManualValidation@1
      timeoutInMinutes: 1440 # task times out in 1 day
      inputs:
        notifyUsers: |
          laveneetbareja05@outlook.com          
        instructions: 'Please validate the build configuration and resume'
        
              
  - job: Deploy_${{parameters.environment}}
    displayName: "${{ parameters.environment }} - Terraform Apply"
    dependsOn: ManualApproval${{parameters.environment}}
    pool: digwi-pool
    condition: and(succeeded(), eq('${{ parameters.runApply }}', 'true'))
    steps:
      - task: AzureCLI@2
        displayName: Terraform Init
        inputs:
          azureSubscription: 'WIF-ServiceConnection'
          scriptType: 'ps' 
          scriptLocation: 'inlineScript'
          workingDirectory: '$(System.DefaultWorkingDirectory)/todo-infra'
          inlineScript: |
            terraform init `
              -backend-config="storage_account_name=digwitfstatestorage" `
              -backend-config="container_name=tfstate" `
              -backend-config="key=${{ parameters.environment }}.tfstate" `
              -backend-config="resource_group_name=rg-tfstate" `
              -backend-config="subscription_id=ab1ac19d-06cd-4ac2-b289-cbb67e904a92" `
              -backend-config="use_azuread_auth=true"

      - task: AzureCLI@2
        displayName: Terraform Apply
        inputs:
          azureSubscription: 'WIF-ServiceConnection'
          scriptType: 'ps'
          scriptLocation: 'inlineScript'
          workingDirectory: '$(System.DefaultWorkingDirectory)/todo-infra'
          inlineScript: |
            terraform apply -auto-approve -var-file="${{ parameters.tfvarspath }}"
          
